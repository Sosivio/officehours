apiVersion: v1
kind: List
metadata:
items:





# Communicator
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: demoapp
    name: demoapp
  spec:
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: demoapp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: demoapp
      spec:
        serviceAccount: sosivio
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
        containers:
        - env:
          - name: API_PORT
            value: "8088"
          - name: DEMOAPP_BE_URL
            value: "http://demoapp-be:8088"
          image: release.sosiv.io/demoapp:v1.13
          imagePullPolicy: Always
          name: demoapp
          readinessProbe:
            httpGet:
              path: /ping
              port: 8088
            initialDelaySeconds: 3
            periodSeconds: 1
            periodSeconds: 1
          ports:
          - containerPort: 8088
            protocol: TCP
          resources:
            requests:
              cpu: 50m 
              memory: 60Mi 
            limits:
              cpu: 70m 
              memory: 140Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: demoapp
    name: demoapp
  spec:
    ports:
    - name: http
      port: 8088
      protocol: TCP
      targetPort: 8088
    selector:
      app: demoapp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}




- apiVersion: networking.k8s.io/v1beta1
  kind: Ingress
  metadata:
    name: demoapp
    annotations:
      # use the shared ingress-nginx
      kubernetes.io/ingress.class: "nginx"
  spec:
    rules:
    - host: demoapp.uat.deveu.sosiv.io
      http:
        paths:
        - backend:
            serviceName: demoapp
            servicePort: 8088





- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: demoapp-be
    name: demoapp-be
  spec:
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: demoapp-be
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: demoapp-be
      spec:
        serviceAccount: sosivio
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
        containers:
        - env:
          - name: API_PORT
            value: "8088"
          image: release.sosiv.io/demoapp-be:v1.13
          imagePullPolicy: Always
          name: demoapp-be
          readinessProbe:
            httpGet:
              path: /ping
              port: 8088
              httpHeaders:
            initialDelaySeconds: 3
            periodSeconds: 1
          ports:
          - containerPort: 8088
            protocol: TCP
          resources:
            requests:
              cpu: 50m 
              memory: 60Mi 
            limits:
              cpu: 70m 
              memory: 140Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: demoapp-be
    name: demoapp-be
  spec:
    ports:
    - name: http
      port: 8088
      protocol: TCP
      targetPort: 8088
    selector:
      app: demoapp-be
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}